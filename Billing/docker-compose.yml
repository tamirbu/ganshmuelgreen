version: '3.8'

services:
  app:
    image: billingapp:${PROJECT_NAME}
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ${PROJECT_NAME}_billing_app
    volumes:
      - ./src/in:/app/in
    ports:
      - "${APP_PORT_MAPPING}:5000"
    environment:
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - CONTAINER_NAME=${PROJECT_NAME}_weight_app
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - shared_network

  db:
    image: billing_mysql:${PROJECT_NAME}
    build:
      context: .
      dockerfile: DockerfileMySQL
    container_name: ${PROJECT_NAME}_billing_mysql
    ports:
      - "${DB_PORT_MAPPING}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_USER: ${DATABASE_USER}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "${DATABASE_HOST}"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - mysql_data:/var/lib/mysql  # Dynamically named volume
      - ./billingdb.sql:/docker-entrypoint-initdb.d/billingdb.sql
    networks:
      - shared_network

volumes:
  mysql_data:
    external:
      name: ${PROJECT_NAME}_mysql_data

networks:
  shared_network:
    external: true